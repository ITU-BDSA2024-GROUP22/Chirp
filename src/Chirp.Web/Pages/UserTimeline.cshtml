@page "/{author}"
@using Chirp.Core.DTOs
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Chirp.Web.Pages.UserTimelineModel
@inject FollowService FollowService;
@{
    ViewData["Title"] = "Chirp!";
    Layout = "Shared/_Layout";
    var routeName = HttpContext.GetRouteValue("author");
    List<AuthorDTO> FollowingList = null;

    if (User.Identity!.IsAuthenticated)
    {
        FollowingList = FollowService.GetFollowing(User.Identity.Name);
    }
}

<div>
    <h2> @((await Model.Author).UserName)'s Timeline </h2>

    <div class="bio" style="background-color: #ffe4f2; border-radius: 10px; padding: 20px; margin: 20px 0;);">
        <p style="font-size: 1.2em; font-family: Arial, sans-serif; color: #555; margin: 0; line-height: 1.6;">
            @((await Model.Bio)?.Text ?? "This user has not added a bio yet.")
        </p>
    </div>


    @if ((User.Identity?.IsAuthenticated == true) && (User.Identity?.Name == (await Model.Author).UserName))
    {
        <div class="cheepbox">
            <h3>What's on your mind, @((await Model.Author).UserName)?</h3>
            <form method="post">
                <div style="position: relative; display: inline-block; width: 100%; max-width: 400px;">
                    <input
                        style="width: 100%;"
                        type="text"
                        asp-for="Text"
                        maxlength="160"
                        id="cheepText"
                        oninput="updateCharacterCount()"
                        placeholder="Write your cheep here..."/>
                </div>

                <!-- Character counter below the cheep box -->
                <span
                    id="charCount"
                    style="display: block; margin-top: 5px; font-size: 0.9em; color: gray;">
                    0/160
                </span>

                <input type="submit" value="Share" id="shareButton" style="margin-top: 10px;" disabled />
            </form>
        </div>

        <script>
        function updateCharacterCount() {
            var cheepInput = document.getElementById("cheepText");
            var charCount = document.getElementById("charCount");
            var shareButton = document.getElementById("shareButton");
            var maxLength = 160;

            // Update used characters
            var used = cheepInput.value.length;
            charCount.textContent = used + "/" + maxLength;

            // Change the color if the limit is almost reached
            if (used >= 150) {
                charCount.style.color = "red";
            } else {
                charCount.style.color = "gray";
            }

            if (used > 0) {
                shareButton.disabled = false;
            } else {
                shareButton.disabled = true;
            }
        }
    </script>
    }

    @if ((await Model.Cheeps).Any())
    {
        <ul id="messagelist" class="cheeps">
            @foreach (var cheep in await Model.Cheeps)
            {
                <li>
                    <p>
                        <small class="timestamp">@cheep.TimeStamp</small>
                    </p>

                    <div class="author-row">
                        <img src="@(cheep.Author.Picture ?? "/images/chirp_silhouette.png")" alt="Profile Picture" class="small-profile-pic"/>
                        <strong>
                            <a href="/@cheep.Author.UserName">@cheep.Author.UserName</a>
                        </strong>
                        @if (@cheep.Author.UserName != (await Model.Author).UserName)
                        {
                            <!-- Unfollow Button -->
                            <form method="post" asp-page-handler="Unfollow">
                                <input type="hidden" name="userToFollow" value="@cheep.Author.UserName"/>
                                <button type="submit" class="follow-btn">
                                    Unfollow
                                </button>
                            </form>
                        }
                    </div>
                    <p>@cheep.Text</p>
                </li>
            }
        </ul>

        if (Model.CheepsCount == 32)
        {
            <div class="pagination" style="display: flex; justify-content: center; align-items: center; margin: 20px 0;">
                @{
                    int currentPage = Model.CurrentPage;

                    if (currentPage > 1)
                    {
                        <a href="/@routeName?page=@(currentPage - 1)" class="prev" style="margin-right: 10px;">
                            <button>Previous</button>
                        </a>
                    }

                    <span class="current-page">@currentPage</span>

                    <a href="/@routeName?page=@(currentPage + 1)" class="next" style="margin-left: 10px;">
                        <button>Next</button>
                    </a>
                }
            </div>
        }

        else if (Model.CheepsCount < 32 && Model.CheepsCount >= 1)
        {
            <div class="pagination" style="display: flex; justify-content: center; align-items: center; margin: 20px 0;">
                @{
                    int currentPage = Model.CurrentPage;

                    if (currentPage > 1)
                    {
                        <a href="/@routeName?page=@(currentPage - 1)" class="prev" style="margin-right: 10px;">
                            <button>Previous</button>
                        </a>
                    }

                    <span class="current-page">@currentPage</span>
                }
            </div>
        }
    }
    else if (!(await Model.Cheeps).Any() && Model.CurrentPage == 1)
        {
            <em>There are no cheeps so far.</em>
            <div class="pagination" style="display: flex; justify-content: center; align-items: center; margin: 20px 0;">
                @{
                int currentPage = Model.CurrentPage;
                <span class="current-page">@currentPage</span>
                }
            </div>
        }
    else
    {
        <em>There are no more cheeps to view.</em>
        <div class="pagination" style="display: flex; justify-content: center; align-items: center; margin: 20px 0;">
            @{
                int currentPage = Model.CurrentPage;

                if (currentPage > 1)
                {
                    <a href="/@routeName?page=@(currentPage - 1)" class="prev" style="margin-right: 10px;">
                        <button>Previous</button>
                    </a>
                }

                <span class="current-page">@currentPage</span>
            }
        </div>
    }
</div>
