name: Publish Chirp

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind: ['linux', 'windows', 'macOS']
        include:
          - kind: linux
            os: ubuntu-latest
            target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          - kind: macOS
            os: macos-latest
            target: osx-x64
          - kind: macOS
            os: macos-latest
            target: osx-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.*

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="Chirp-$tag-${{ matrix.target }}"

          # Build everything
          dotnet publish src/Chirp.Razor/Chirp.Razor.csproj --runtime "${{ matrix.target }}" -c Release -o "$release_name"
 
          # Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip for Windows
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            # Create a .tar.gz file
            tar czvf "${release_name}.tar.gz" "$release_name"
            
            # Extract the .tar.gz file
            mkdir "${release_name}_extracted"
            tar -xzvf "${release_name}.tar.gz" -C "${release_name}_extracted"

            # Create a .zip file from the extracted contents
            zip -r "${release_name}.zip" "${release_name}_extracted/$release_name"

            # Remove the .tar.gz and extracted directory
            rm "${release_name}.tar.gz"
            rm -r "${release_name}_extracted"
          fi

          # Delete output directory
          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "Chirp*.zip"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
