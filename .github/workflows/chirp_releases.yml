name: Publish Chirp

on:
  push:
    branches:
      - main  # Trigger only when merging to the main branch

jobs:
  release:
    name: Release Chirp
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.0.x  # Update to .NET 7

      - name: Get version from the last Git tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0)
          echo "::set-output name=tag::$tag"

      - name: Create a new tag if not exists
        run: |
          # Create a new tag based on the current date and push it
          new_tag="v$(date +'%Y%m%d%H%M%S')"
          git tag $new_tag
          git push origin $new_tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Package for Linux, Windows, and macOS
        shell: bash
        run: |
          # Use the new tag for release name
          tag=$(git describe --tags --abbrev=0)
          
          # Target platforms
          targets=("linux-x64" "win-x64" "osx-x64")

          for target in "${targets[@]}"; do
            release_name="Chirp-${tag}-${target}"

            # Build for each target
            dotnet publish src/Chirp.CLI/Chirp.CLI.csproj --framework net7.0 --runtime "$target" -c Release -o "$release_name" --self-contained false

            # Compress the output based on the platform
            if [ "$target" == "win-x64" ]; then
              # Pack for Windows into a zip
              7z a -tzip "${release_name}.zip" "./${release_name}/*"
            else
              # Pack for Linux/macOS into a tar.gz
              tar czvf "${release_name}.tar.gz" "$release_name"
            fi

            # Clean up output directory after compression
            rm -r "$release_name"
          done

      - name: Publish Releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          name: "Chirp! Release ${{ steps.get_tag.outputs.tag }}"
          files: "Chirp*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

